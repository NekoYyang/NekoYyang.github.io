<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>阳阳の小窝</title>
  
  <subtitle>阳阳の小窝</subtitle>
  <link href="https://nekoyyang.eu.org:233/atom.xml" rel="self"/>
  
  <link href="https://nekoyyang.eu.org:233/"/>
  <updated>2022-08-29T06:55:21.812Z</updated>
  <id>https://nekoyyang.eu.org:233/</id>
  
  <author>
    <name>NekoYyang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>利用Redis实现统计24小时内的访问量</title>
    <link href="https://nekoyyang.eu.org:233/2022/08/20/Use-Redis-Record-Visitor-24/"/>
    <id>https://nekoyyang.eu.org:233/2022/08/20/Use-Redis-Record-Visitor-24/</id>
    <published>2022-08-20T09:52:09.000Z</published>
    <updated>2022-08-29T06:55:21.812Z</updated>
    
    <content type="html"><![CDATA[<h1 id="利用Redis实现统计24小时内的访问量"><a href="#利用Redis实现统计24小时内的访问量" class="headerlink" title="利用Redis实现统计24小时内的访问量"></a>利用Redis实现统计24小时内的访问量</h1><h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p>记录不同用户在24小时(指定时间)内的访问量，并记录访问日志。如果达到一定的频率则封禁IP</p><h2 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h2><p>Redis 6.2.4<br>PHP 8.0</p><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><p>  我们先来了解一下Redis，Redis是一个高性能的Key &#x3D;&gt; Value缓存器，由于数据缓存在内存中，所以比Mysql等数据库等响应速度要快几十到上百倍。</p><p>  在这个实例中，我们用到的是Redis的Hash类型，通过用户每次访问，在Redis中记录访问者的IP以及对应的时间戳，来达到统计的目的，并且判断该IP访问的历史时间戳是否超过了24小时，如果超过则删除，最终通过llen来获取24小时内的访问次数。</p><h2 id="首先我们通过PHP连接Redis"><a href="#首先我们通过PHP连接Redis" class="headerlink" title="首先我们通过PHP连接Redis:"></a>首先我们通过PHP连接Redis:</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-variable">$redis</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Redis</span>(); <br>        <span class="hljs-variable">$redis</span>-&gt;<span class="hljs-title function_ invoke__">connect</span>(<span class="hljs-string">&#x27;127.0.0.1&#x27;</span>, <span class="hljs-number">6379</span>);<br>        <span class="hljs-variable">$redis</span> -&gt; <span class="hljs-title function_ invoke__">select</span>(<span class="hljs-number">1</span>); <span class="hljs-comment">//选择DB1</span><br>    &#125; <span class="hljs-keyword">catch</span> (<span class="hljs-built_in">Exception</span> <span class="hljs-variable">$e</span>) &#123;<br>        <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Content-type:text/json&#x27;</span>);<br>        <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Access-Control-Allow-Origin: *&#x27;</span>);<br>        <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;ERROR: redis -&gt; &#x27;</span> . <span class="hljs-variable">$e</span>-&gt;<span class="hljs-title function_ invoke__">getMessage</span>());<br>        <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">json_encode</span>(<span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;code&#x27;</span> =&gt; <span class="hljs-number">444</span>,<span class="hljs-string">&#x27;msg&#x27;</span> =&gt; <span class="hljs-string">&#x27;系统错误,请联系管理员&#x27;</span>)); <span class="hljs-comment">// redis连接失败</span><br>        <span class="hljs-keyword">exit</span>; <br>    &#125;<br></code></pre></td></tr></table></figure><p>接着可以通过$_SERVER[‘REMOTE_ADDR’]等函数获取 访问者ip，获取访问者IP之后，我们需要在Redis中检查这个键是否存在，如果不存在则需要新建:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$redis_key_name</span> = 用户IP;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$redis</span> -&gt; <span class="hljs-title function_ invoke__">exists</span>(<span class="hljs-variable">$redis_key_name</span>))&#123;<br>       <span class="hljs-keyword">while</span>(True) &#123;<br>           <span class="hljs-comment">//检查历史访问的时间戳是否过期，过期则删除</span><br>           <span class="hljs-variable">$da</span> = <span class="hljs-variable">$redis</span> -&gt; <span class="hljs-title function_ invoke__">lRange</span>(<span class="hljs-variable">$redis_key_name</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>)[<span class="hljs-number">0</span>] ?? <span class="hljs-string">&#x27;&#x27;</span>;<br>           <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">time</span>() - (<span class="hljs-keyword">int</span>)<span class="hljs-variable">$da</span> &gt;= <span class="hljs-variable">$limit_time</span>)&#123;<br>               <span class="hljs-variable">$redis</span> -&gt; <span class="hljs-title function_ invoke__">lrem</span>(<span class="hljs-variable">$redis_key_name</span>,<span class="hljs-variable">$da</span>,<span class="hljs-number">0</span>);<br>           &#125; <span class="hljs-keyword">else</span> &#123;<br>               <span class="hljs-keyword">break</span>;<br>           &#125;<br>       &#125;<br>       <span class="hljs-comment">//写入当前时间戳</span><br>       <span class="hljs-variable">$redis</span> -&gt; <span class="hljs-title function_ invoke__">rPushx</span>(<span class="hljs-variable">$redis_key_name</span>,<span class="hljs-title function_ invoke__">time</span>());<br>       <span class="hljs-variable">$num</span> = <span class="hljs-variable">$redis</span> -&gt; <span class="hljs-title function_ invoke__">llen</span>(<span class="hljs-variable">$redis_key_name</span>);<br>   &#125; <span class="hljs-keyword">else</span> &#123;<br>       <span class="hljs-variable">$redis</span> -&gt; <span class="hljs-title function_ invoke__">lPush</span>(<span class="hljs-variable">$redis_key_name</span>,<span class="hljs-title function_ invoke__">time</span>());<br>       <span class="hljs-variable">$num</span> = <span class="hljs-number">1</span>;<br>   &#125;<br></code></pre></td></tr></table></figure><p>之后我们可以直接使用llen获取表内的数据个数:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span>(<span class="hljs-variable">$redis</span> -&gt; <span class="hljs-title function_ invoke__">llen</span>(<span class="hljs-variable">$redis_key_name</span>) &gt;= <span class="hljs-variable">$limit_num</span>)&#123;<br>        <span class="hljs-comment">//超过限制数目 -&gt; banip</span><br>    &#125;<br><span class="hljs-variable">$redis</span> -&gt; <span class="hljs-title function_ invoke__">expire</span>(<span class="hljs-variable">$redis_key_name</span>,<span class="hljs-variable">$limit_time</span>); <span class="hljs-comment">//这里用来设置键的有效期 ，超过24小时则删除</span><br><br><span class="hljs-comment">//同时可以通过error_log()函数记录用户的访问信息</span><br></code></pre></td></tr></table></figure><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><p><a href="https://github.com/nekoyyang/Redis-Record-Visit">https://github.com/nekoyyang/Redis-Record-Visit</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;利用Redis实现统计24小时内的访问量&quot;&gt;&lt;a href=&quot;#利用Redis实现统计24小时内的访问量&quot; class=&quot;headerlink&quot; title=&quot;利用Redis实现统计24小时内的访问量&quot;&gt;&lt;/a&gt;利用Redis实现统计24小时内的访问量&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="数据库" scheme="https://nekoyyang.eu.org:233/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="redis" scheme="https://nekoyyang.eu.org:233/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>初次见面</title>
    <link href="https://nekoyyang.eu.org:233/2022/08/19/hello-world/"/>
    <id>https://nekoyyang.eu.org:233/2022/08/19/hello-world/</id>
    <published>2022-08-19T02:00:00.000Z</published>
    <updated>2022-08-29T06:55:04.274Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to Yangyang Cafe I am the owner of the coffee house Yangyang.I am a Yang who likes to eat and play. I like to chat with everyone, like to play sand carving games, and like to water with friends.Java is really hard. Sobbing, sobbing, sobbing.Maybe I’m a full stack engineer?Wu, I’m not sure….</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to Yangyang Cafe I am the owner of the coffee house Yangyang.I am a Yang who likes to eat and play. I like to chat with everyone,</summary>
      
    
    
    
    
  </entry>
  
</feed>
