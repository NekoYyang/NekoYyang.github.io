<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>哪吒监控Neko Mdui主题美化</title>
      <link href="/2022/10/04/Beautify-NezhaStatus/"/>
      <url>/2022/10/04/Beautify-NezhaStatus/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>用NekoMdui这个主题感觉还是差点味道，因为他的主题背景是纯白的（，而加了背景之后感觉还是差点味道，比如说卡片透明一类的，感觉不透明不是很好看()</p><h2 id="演示站"><a href="#演示站" class="headerlink" title="演示站"></a>演示站</h2><p><a href="https://tz.yyang888.eu.org:233/">https://tz.yyang888.eu.org:233/</a></p><h1 id="主题截图"><a href="#主题截图" class="headerlink" title="主题截图"></a>主题截图</h1><p><img src="https://nekoyyang.eu.org:233/img/nezhastatus.png" alt="1"><br><img src="https://s1.ax1x.com/2022/10/07/x89U8s.png" alt="1"></p><h1 id="食用方法"><a href="#食用方法" class="headerlink" title="食用方法"></a>食用方法</h1><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>登录 -&gt; 管理后台 -&gt; 设置 -&gt; 主题 -&gt; NekoMdui -&gt;</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs css">&lt;style type=&quot;text/css&quot;&gt;<br><span class="hljs-selector-tag">body</span>&#123;<br><span class="hljs-attribute">background</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&quot;https://s1.328888.xyz/2022/10/07/foQMI.png&quot;</span>) no-repeat center center fixed;<br>                -webkit-<span class="hljs-attribute">background-size</span>: cover;<br>                -o-<span class="hljs-attribute">background-size</span>: cover;                <br>                <span class="hljs-attribute">background-size</span>: cover;<br>&#125;<br><span class="hljs-selector-class">.mdui-card</span> &#123;<br>                <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#ffffff54</span>;<br>                <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">15px</span>;<br>                backdrop-<span class="hljs-attribute">filter</span>: <span class="hljs-built_in">blur</span>(<span class="hljs-number">7px</span>);<br>&#125;<br><span class="hljs-selector-class">.mdui-table</span> &#123;<br>                <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#ffffff54</span>;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></figure><h1 id="更新日记"><a href="#更新日记" class="headerlink" title="更新日记"></a>更新日记</h1><p>2022.10.05 增加了服务页面的透明的样式<br>2022.10.04 按照自己的喜好完成了基本</p>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nezha </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VPS+Git博客同步部署方案</title>
      <link href="/2022/08/29/Hexo-VPS-Git/"/>
      <url>/2022/08/29/Hexo-VPS-Git/</url>
      
        <content type="html"><![CDATA[<p>自从再Github上部署完博客，使用了一段时间之后非常喜欢，干脆就把我之前的 Typecho 换成了 Hexo。Hexo可以一条命令直接发布并且部署，可以说是非常方便。但是 Github + Cloudflare 对于国内的访问非常卡顿（，所以我就一直在想如何在部署的时候直接发布到国内的服务器。我的设想是 本地→GitHub→VPS</p><h1 id="软件准备"><a href="#软件准备" class="headerlink" title="软件准备"></a>软件准备</h1><ol><li>Web Server</li><li>Git</li></ol><h1 id="在-VPS-上搭建Git-Server"><a href="#在-VPS-上搭建Git-Server" class="headerlink" title="在 VPS 上搭建Git Server"></a>在 VPS 上搭建Git Server</h1><p>我这边选用 Centos 来搭建Git Server。ArchLinux我试过也是可行的，其他系统可以按照教程自行尝试下。</p><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>首先需要安装Git，可以用yum源进行安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo yum install -y git<br></code></pre></td></tr></table></figure><p>接下来我们检查是否安装成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">[root@VM-0-17-centos ~]# git version<br>git version 1.8.3.1<br></code></pre></td></tr></table></figure><h2 id="增加运行Git的用户"><a href="#增加运行Git的用户" class="headerlink" title="增加运行Git的用户"></a>增加运行Git的用户</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">useradd git <br></code></pre></td></tr></table></figure><p>这里要为他设置一个密码这里可以随便设置 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">passwd git<br></code></pre></td></tr></table></figure><h2 id="Git-仓库目录"><a href="#Git-仓库目录" class="headerlink" title="Git 仓库目录"></a>Git 仓库目录</h2><p>创建完用户之后我们还需要给他创建一个仓库目录来存放我们的项目<br>在这里我放在 &#x2F;git&#x2F;repo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo mkdir -p /git/repo<br>cd /git/repo<br></code></pre></td></tr></table></figure><h2 id="初始化仓库"><a href="#初始化仓库" class="headerlink" title="初始化仓库"></a>初始化仓库</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git init --bare xxx.git<br></code></pre></td></tr></table></figure><p>执行<code>ls</code>可以查看有没有创建成功</p><h2 id="设置权限"><a href="#设置权限" class="headerlink" title="设置权限"></a>设置权限</h2><p>回到<code>/git</code>目录底下来设置repo文件夹的权限,这一步是为了直接把 repo 目录和子目录的用户和用户组都指向 git ( 如果没有这一步无法上传会提示权限不足</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">chown -R git:git reponame.git<br></code></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>用法是git clone 用户名@你的服务器ip:仓库路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone git@ip:/git/repo/xxx.git <br></code></pre></td></tr></table></figure><p>如果他提示<code>warning: You appear to have cloned an empty repository.</code>就意味着你的 Git Server已经搭建成功了，但是我们是通过密码登录的，这不是我们想要的效果，所以我们要让这个 Git 用户使用私钥登录</p><h2 id="添加私钥"><a href="#添加私钥" class="headerlink" title="添加私钥"></a>添加私钥</h2><p>我们切换到root用户 然后到<code>/home/git</code>目录下然后进入到<code>.ssh</code>目录下创建一个<code>authorized_keys</code>,在 authorized_keys 里面写入你的私钥 你的 Git Server 就完成了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">su root<br>cd /home/git/.ssh<br>touch authorized_keys<br>nano authorized_keys<br></code></pre></td></tr></table></figure><h1 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h1><p>右键 -&gt; Git Bash Here，设置用户名和邮箱</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">git config --global user.name &quot;用户名&quot; <br>git config --global user.email &quot;邮箱&quot;<br></code></pre></td></tr></table></figure><p>本地博客测试成功后，就是上传到 GitHub 部署</p><h3 id="安装-hexo-deployer-git："><a href="#安装-hexo-deployer-git：" class="headerlink" title="安装 hexo-deployer-git："></a>安装 hexo-deployer-git：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><h3 id="修改-config-yml"><a href="#修改-config-yml" class="headerlink" title="修改 _config.yml"></a>修改 _config.yml</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repository:</span> <span class="hljs-string">git@github.com:用户名/用户名.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><p>完成后就可以运行 <code>hexo clean &amp; hexo g &amp; hexo d</code> 将网站上传到 GitHub。</p><h2 id="VPS"><a href="#VPS" class="headerlink" title="VPS"></a>VPS</h2><p>VPS 这里我选择使用 Git Hooks 实现博客的更新，VPS可以配置 Git Hooks，将文件同步到站点目录</p><h3 id="配置Git-Hooks"><a href="#配置Git-Hooks" class="headerlink" title="配置Git Hooks"></a>配置Git Hooks</h3><p>我们先切换到root用户，然后到你存放git仓库的目录，我这里叫xxx.git，可以将你的仓库名字替代到xxx里面</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">su root<br>cd /git/repo/xxx.git/hooks<br>touch post-receive     <br>nano post-receive<br></code></pre></td></tr></table></figure><p>在 nano 中输入以下代码后保存退出</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/bin/bash</span><br>GIT_REPO=/git/repo/xxx.git    <br>TMP_GIT_CLONE=/tmp/hexo<br>PUBLIC_WWW=/www/wwwroot/nekoyyang.eu.org <br>rm -rf $&#123;TMP_GIT_CLONE&#125;<br>git clone $GIT_REPO $TMP_GIT_CLONE<br>rm -rf $&#123;PUBLIC_WWW&#125;/*<br>cp -rf $&#123;TMP_GIT_CLONE&#125;/* $&#123;PUBLIC_WWW&#125;<br></code></pre></td></tr></table></figure><p>然后再给予这个脚本执行权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">chmod +x post-receive  <br></code></pre></td></tr></table></figure><h3 id="本机配置"><a href="#本机配置" class="headerlink" title="本机配置"></a>本机配置</h3><p>进入hexo博客文件夹，打开_config.yml,修改deploy选项</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">deploy:<br>- type: git <br>  repository: git@github.com:NekoYyang/NekoYyang.github.io.git <br>  branch: master<br>- type: git <br>  repository: git@vps ip:xxx.git:/git/resp/xxx.git<br>  branch: master<br></code></pre></td></tr></table></figure><p>运行<code>hexo clean &amp; hexo g &amp; hexo d</code> 如果一切正常 如果文件已经被成功推到了 Blog 的仓库里，到现在成功部署到VPS上</p><h3 id="网页部署"><a href="#网页部署" class="headerlink" title="网页部署"></a>网页部署</h3><p>我这边使用 BTPanel 方法很简单就不再演示了</p>]]></content>
      
      
      <categories>
          
          <category> 折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初次见面</title>
      <link href="/2022/08/19/hello-world/"/>
      <url>/2022/08/19/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to Yangyang Cafe I am the owner of the coffee house Yangyang.I am a Yang who likes to eat and play. I like to chat with everyone, like to play sand carving games, and like to water with friends.Java is really hard. Sobbing, sobbing, sobbing.Maybe I’m a full stack engineer?Wu, I’m not sure….</p>]]></content>
      
      
      <categories>
          
          <category> 碎语 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
